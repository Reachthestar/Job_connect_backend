generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum roleTypes {
  SEEKER
  COMPANY
}

model User {
  id                 Int       @id @default(autoincrement())
  firstName          String
  lastName           String
  email              String    @unique @db.VarChar(50)
  password           String    @db.VarChar(256)
  phone              String?   @unique @db.VarChar(20)
  province           String?   @db.VarChar(50)
  city               String?   @db.VarChar(50)
  jobTitle           String?   @db.VarChar(100)
  profileImage       String?   @db.VarChar(256)
  companyName        String?   @unique @db.VarChar(100)
  companyDescription String?   @db.Text
  isActive           Boolean   @default(true)
  role               roleTypes

  Experience  Experience[]
  application Application[]
  Job         Job[]
}

enum experienceTitle {
  EDUCATION
  WORK
}

model Experience {
  id          Int             @id @default(autoincrement())
  title       experienceTitle
  name        String          @db.VarChar(100)
  description String?         @db.Text
  startYear   Int?
  endYear     Int?
  userId      Int

  user User @relation(fields: [userId], references: [id])
}

enum jobType {
  FULL_TIME
  PART_TIME
}

model Job {
  id            Int       @id @default(autoincrement())
  description   String    @db.Text
  qualification String    @db.Text
  title         String    @db.VarChar(100)
  position      String?   @db.VarChar(100)
  type          jobType
  province      String?   @db.VarChar(50)
  city          String?   @db.VarChar(50)
  salaryMin     String?   @db.VarChar(10)
  salaryMax     String?   @db.VarChar(10)
  createdAt     DateTime  @default(now()) @db.Timestamp(0)
  updatedAt     DateTime  @updatedAt @db.Timestamp(0)
  dueDate       DateTime? @db.DateTime()
  userId        Int

  user User @relation(fields: [userId], references: [id])

  Application Application[]
}

enum applicationStatus {
  PENDING
  ACCEPTED
  DENIED
}

model Application {
  id        Int               @id @default(autoincrement())
  status    applicationStatus
  createdAt DateTime          @default(now()) @db.Timestamp(0)
  updatedAt DateTime          @updatedAt @db.Timestamp(0)
  userId    Int
  jobId     Int

  user User @relation(fields: [userId], references: [id])
  job  Job  @relation(fields: [jobId], references: [id])
}
